parameters:
  - name: variableGroupName
  - name: vmImageName
  - name: environment

stages:
  - stage: RunPlaywrightTests
    displayName: "Run Playwright Tests"
    variables:
      - group: ${{ parameters.variableGroupName }}

    jobs:
    - job: RunPlaywrightTests
      pool:
        vmImage: ${{ parameters.vmImageName }}
      variables:
        workingDirectory: "$(Build.SourcesDirectory)/lms-core/LMS.Core.Web/Playwright.Tests"        

      steps:
      - task: NodeTool@0
        inputs:
          versionSpec: '18.x'
        displayName: 'Install Node.js'

      - script: npm ci
        displayName: 'npm ci'
        workingDirectory: $(workingDirectory)       

      - script: npx playwright install --with-deps
        displayName: 'Install Playwright browsers'
        workingDirectory: $(workingDirectory)

      - script: |
          echo Running Playwright tests
          npx playwright test
        displayName: 'Run Playwright Tests'
        workingDirectory: $(workingDirectory)
        env:
          CI: 'true'
          NODE_ENV: ${{ parameters.environment }}
          baseUrl: $(baseUrl)
          testDataFile: $(testDataFile)
          WORKERS_NUMBER: $(workersNumber)

      - task: PublishTestResults@2
        displayName: 'Publish test results'
        inputs:
          searchFolder: '$(workingDirectory)/test-results'
          testResultsFormat: 'JUnit'
          testResultsFiles: 'e2e-junit-results.xml'
          mergeTestResults: true
          testRunTitle: 'End-To-End Tests Result'
        condition: succeededOrFailed()          

      - task: PublishPipelineArtifact@1
        inputs:
          targetPath: '$(workingDirectory)/playwright-report'
          artifactName: 'playwright-report'
          publishLocation: 'pipeline'
        displayName: 'Publish Playwright Report'
        condition: succeededOrFailed()